// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_STATUS {
  ACTIVE
  INACTIVE
  DELETED
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  email    String      @unique
  password String
  status   USER_STATUS @default(ACTIVE)
  logs     Log[]

  tenantId String @db.Uuid
  roleId   String @db.Uuid

  tenant Tenant @relation(fields: [tenantId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])
}

enum LOGS_STATUS {
  SUCCESS
  FAILED
}

enum MODULES {
  AUTH
  USER
}

enum LOGS_ACTION {
  CREATE
  UPDATE
  DELETE
}

model Log {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String? @db.Uuid
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  type    MODULES
  status  LOGS_STATUS
  action  LOGS_ACTION
  message String
}

model Tenant {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  isActive Boolean @default(false)
  logoUrl  String?
  meta     Json    @default("{}")
  tenantId String  @unique

  users User[]
}

enum ROLE_TYPE {
  TENANT_MANAGER
  TENANT_ADMIN
  TENANT_CLIENT
}

model Role {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type ROLE_TYPE
  name String

  permission permission[]
  User       User[]
}

model permission {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  identytiiy String @unique
  name       String

  role Role[]
}
